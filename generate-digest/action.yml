name: SignTool detached digest generator
description: Generate a digest and partially signed artifact for further processing by remotesign workflow and techops/apply-digest action
author: tim-seves
inputs:
  path:
    description: Directory containing files to sign
    required: true
  algorithm:
    description: Digest hash algorithm
    default: "sha256"
    required: true
  url:
    description: Description URL to include in the signed file.
    default: "https://software.sil.org"
  public-cert:
    description: Secret containing the Base64 encoded public cert to sign against.
    required: true
outputs:
    job: 
      description: The job describing the file and parameters to be processed by the sign-digest workflow.
      value: ${{ toJSON(steps.digest.outputs) }}
runs:
  using: composite
  steps:
  - name: Generate digest and artifact
    id: digest
    env:
      signtool: C:/"Program Files (x86)"/"Windows Kits"/10/bin/10.0.17763.0/x86/signtool.exe
    shell: pwsh
    run: |
      $PublicCert = [System.Convert]::FromBase64String('${{ inputs.public-cert }}')
      $Targets = '${{ inputs.path }}'.Trim().Split([Environment]::NewLine, [StringSplitOptions]::RemoveEmptyEntries)
      $Targets = Get-ChildItem . -Include $Targets -Name
      Set-Content $ENV:TEMP\certificate -Value ($PublicCert) -AsByteStream

      ${{env.signtool}} sign /f $ENV:TEMP\certificate /dg . /fd ${{ inputs.algorithm }} /du ${{ inputs.url }} /v $Targets
      Write-Output ('id=${{ hashFiles(inputs.path) }}') >> $ENV:GITHUB_OUTPUT
      Write-Output ('algorithm=${{ inputs.algorithm }}') >> $ENV:GITHUB_OUTPUT
      Write-Output ('targets=' + ($Targets -join '|')) >> $ENV:GITHUB_OUTPUT

  - id: upload
    uses: actions/upload-artifact@v4
    with:
      name: codesign-job-${{ steps.digest.outputs.id }}
      path: |
        ${{ inputs.path }}
        *.p7u
        *.dig