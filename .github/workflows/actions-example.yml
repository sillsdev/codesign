name: Demonstrate use of fine grained actions with sign-digest.yml workflow
on:
  push:
    paths:
    - .github/workflows/sign-digest.yml
    - .github/workflows/actions-example.yml
    - apply-signed-digest/**
    - generate-digest/**
    - timestamp/**
    - verify-signature/**

jobs:
  build:
    runs-on: windows-latest
    outputs:
      job1: ${{ steps.generate.outputs.job }}
    steps:
    - uses: actions/checkout@v4
    
    # build your exe, dll or msi here
    # you can build multiple deliverables here and call generate-digest many times,
    # provided you store each invocation's artifact and digest pair separately.

    - id: generate
      uses: sillsdev/codesign/generate-digest@fix/combine-partialy-signed-variables
      with:
        path: grcompiler.exe
        public-cert: ${{ secrets.CODESIGN_LSDEVSECTIGOEV }}

  sign:
    needs: build
    uses: sillsdev/codesign/.github/workflows/sign-digest.yml@fix/combine-partialy-signed-variables
    with:
      job: ${{ needs.build.outputs.job1 }}
  
  attach:
    needs: sign
    runs-on: windows-latest
    steps:
    # you can apply multiple signature by calling apply-signed-digest many times,
    # provided you reference each invocation's artifact and digest pair separately.
    - uses: sillsdev/codesign/apply-signed-digest@fix/combine-partialy-signed-variables
      with:
        job: ${{ needs.sign.outputs.signed-job }}

    # Same potential to timestamp, and/or verify mulitple signed deliverables.
    - id: timestamp
      uses:  sillsdev/codesign/timestamp@fix/combine-partialy-signed-variables
      with:
        path: ${{ needs.sign.outputs.signed-job }}

    - name: Confirm signature
      uses: sillsdev/codesign/verify-signature@fix/combine-partialy-signed-variables
      with:
        path:  ${{ fromJson(needs.sign.outputs.signed-job).path }}